@using FinancialPlanner.Web.Helpers
@model FinancialPlanner.Infrastructure.Domain.ItemDetail.ViewModels.DetailItemView			

@if (ViewData["Action"].ToString() == "Edit")
{
    @Html.HiddenFor(model => model.PkID)
    @Html.HiddenFor(model => model.UserName)
}

<div class="form-group row">
    @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.StrAmount, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.StrAmount, "_Currency")
        @Html.ValidationMessageFor(model => model.StrAmount, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group row">
    @Html.LabelFor(model => model.FkPeriod, "Period", new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.DropDownList("FkPeriod", null, new {@class = "form-control"})
        @Html.ValidationMessageFor(model => model.FkPeriod, "", new {@class = "text-danger"})
    </div>
</div>

<div id="BeginDateDiv" class="form-group row">
    @Html.LabelFor(model => model.BeginDate, new {@class = "control-label col-md-2", id = "BDLabel"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.BeginDate, "_Date")
        @Html.ValidationMessageFor(model => model.BeginDate, "", new {@class = "text-danger"})
    </div>
</div>

<div id="EndDateDiv" class="form-group row">
    @Html.LabelFor(model => model.EndDate, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.EndDate, "_Date")
        @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
    </div>
</div>

<div id="WeeklyDOWDiv" class="form-group row">
    @Html.LabelFor(model => model.WeeklyDOW, new {@class = "control-label col-md-2"})
    <div id="ResponsiveList" class="col-md-10">
        <ul class="list-group-plain">
            @Html.RadioButtonList(model => model.WeeklyDOW, (SelectList)ViewBag.WeekDaysDOW)
        </ul>
        @Html.ValidationMessageFor(model => model.WeeklyDOW, "", new {@class = "text-danger"})
    </div>
</div>

<div id="EverOtherWeekDOWDiv" class="form-group row">
    @Html.LabelFor(model => model.EverOtherWeekDOW, new {@class = "control-label col-md-2"})
    <div id="ResponsiveList" class="col-md-10">
        <ul class="list-group-plain">
            @Html.RadioButtonList(model => model.EverOtherWeekDOW, (SelectList)ViewBag.WeekDaysEODOW)
        </ul>
        @Html.ValidationMessageFor(model => model.EverOtherWeekDOW, "", new {@class = "text-danger"})
    </div>
</div>

<div id="BiMonthlyDiv" class="form-group row">
    @Html.LabelFor(model => model.BiMonthlyDay1, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-day-1">
            @Html.EditorFor(model => model.BiMonthlyDay1, "_Dropdown")
        </div>
        <div class="box-day-2">
            @Html.EditorFor(model => model.BiMonthlyDay2, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.BiMonthlyDay1, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.BiMonthlyDay2, "", new {@class = "text-danger"})
    </div>
</div>

<div id="MonthlyDOMDiv" class="form-group row">
    @Html.LabelFor(model => model.MonthlyDOM, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-day-1">
            @Html.EditorFor(model => model.MonthlyDOM, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.MonthlyDOM, "", new {@class = "text-danger"})
    </div>
</div>

<div id="Quarterly1Div" class="form-group row">
    @Html.LabelFor(model => model.Quarterly1Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.Quarterly1Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.Quarterly1Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly1Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly1Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="Quarterly2Div" class="form-group row">
    @Html.LabelFor(model => model.Quarterly2Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.Quarterly2Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.Quarterly2Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly2Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly2Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="Quarterly3Div" class="form-group row">
    @Html.LabelFor(model => model.Quarterly3Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.Quarterly3Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.Quarterly3Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly3Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly3Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="Quarterly4Div" class="form-group row">
    @Html.LabelFor(model => model.Quarterly4Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.Quarterly4Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.Quarterly4Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly4Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.Quarterly4Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="SemiAnnual1Div" class="form-group row">
    @Html.LabelFor(model => model.SemiAnnual1Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.SemiAnnual1Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.SemiAnnual1Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.SemiAnnual1Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.SemiAnnual1Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="SemiAnnual2Div" class="form-group row">
    @Html.LabelFor(model => model.SemiAnnual2Month, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.SemiAnnual2Month, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.SemiAnnual2Day, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.SemiAnnual2Month, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.SemiAnnual2Day, "", new {@class = "text-danger"})
    </div>
</div>

<div id="AnnualDiv" class="form-group row">
    @Html.LabelFor(model => model.AnnualMOY, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="box-month">
            @Html.EditorFor(model => model.AnnualMOY, "_Dropdown")
        </div>
        <div class="box-day">
            @Html.EditorFor(model => model.AnnualDOM, "_Dropdown")
        </div>
        &nbsp;@Html.ValidationMessageFor(model => model.AnnualMOY, "", new {@class = "text-danger"})
        <br />
        &nbsp;@Html.ValidationMessageFor(model => model.AnnualDOM, "", new {@class = "text-danger"})
    </div>
</div>

<div id="DateRangeReqDiv" class="form-group row">
    @Html.LabelFor(model => model.DateRangeReq, new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        <div class="checkbox">
            @Html.CheckBoxFor(model => model.DateRangeReq, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.DateRangeReq, "", new {@class = "text-danger"})
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        resetVisibility();
        setVisibility();
    });
    $('#FkPeriod').on('change', function() {
        resetVisibility();
        setVisibility();
    });

    $('input[id="DateRangeReq"]:visible').on('click', function() {
        resetVisibility();
        setVisibility();
    });


    // Set Display on all fields according to selected period value
    function setVisibility() {
        var period = parseInt($("#FkPeriod").val());
        var checked = $('input[id="DateRangeReq"]:visible').is(':checked');
        $('#BDLabel').text('Start Date:');
        switch (period) {
        case 1: // One Time Occurrence
            $('#BDLabel').text('Date of Occurrence:');
            $('#BeginDateDiv').show();
            $('#DateRangeReqDiv').hide();
            break;
        case 2: // Daily
            setDateRange(checked);
            break;
        case 3: // Weekly
            $('#WeeklyDOWDiv').show();
            setDateRange(checked);
            break;
        case 4: // Ever Other Week
            $('#BDLabel').text('Initialization Date:');
            $('#BeginDateDiv').show();
            $('#EverOtherWeekDOWDiv').show();
            if (checked) {
                $('#EndDateDiv').show();
            } else {
                $('#EndDateDiv').hide();
            };
            break;
        case 5: // Bi-Monthly
            $('#BiMonthlyDiv').show();
            //$('#BiMonthlyDay1Div').show();
            //$('#BiMonthlyDay2Div').show();
            setDateRange(checked);
            break;
        case 6: // Monthly
            $('#MonthlyDOMDiv').show();
            setDateRange(checked);
            break;
        case 7: // Quarterly
            $('#Quarterly1Div').show();
            $('#Quarterly2Div').show();
            $('#Quarterly3Div').show();
            $('#Quarterly4Div').show();
            setDateRange(checked);
            break;
        case 8: // Semi-Annually
            $('#SemiAnnual1Div').show();
            $('#SemiAnnual2Div').show();
            setDateRange(checked);
            break;
        case 9: // Annually
            $('#AnnualDiv').show();
            setDateRange(checked);
            break;
        default:
            break;
        }
    }

    // Set Date Range Fields
    function setDateRange(checked) {
        switch (checked) {
        case true: // If checked
            $('#BeginDateDiv').show();
            $('#EndDateDiv').show();
            break;
        case false: // If not
            $('#BeginDateDiv').hide();
            $('#EndDateDiv').hide();
            break;
        default:
            break;
        }
    };

    // Reset Display on all fields to None
    function resetVisibility() {
        $('#BeginDateDiv').hide();
        $('#EndDateDiv').hide();
        $('#WeeklyDOWDiv').hide();
        $('#EverOtherWeekDOWDiv').hide();
        $('#BiMonthlyDiv').hide();
        //$('#BiMonthlyDay1Div').hide();
        //$('#BiMonthlyDay2Div').hide();
        $('#MonthlyDOMDiv').hide();
        $('#Quarterly1Div').hide();
        $('#Quarterly2Div').hide();
        $('#Quarterly3Div').hide();
        $('#Quarterly4Div').hide();
        $('#SemiAnnual1Div').hide();
        $('#SemiAnnual2Div').hide();
        $('#AnnualDiv').hide();
        $('#DateRangeReqDiv').show();
    };

</script>





@*<div id="EverOtherWeekDOWDiv" class="form-group row">
        @Html.LabelFor(model => model.EverOtherWeekDOW, new {@class = "control-label col-md-2"})
        <div id="ResponsiveList" class="col-md-10">
            @Html.EditorFor(model => model.EverOtherWeekDOW, "_Radio")
            @Html.ValidationMessageFor(model => model.EverOtherWeekDOW, "", new {@class = "text-danger"})
        </div>
</div>*@